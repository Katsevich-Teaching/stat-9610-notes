54/6
quarto render
quarto render
quarto render
library(knitr)
kable(
matrix(c(9, 12, 21, 7, 17, 24, 16, 29, 45),
nrow = 3,
dimnames = list(c("Treatment", "Control", "Total"),
c("Success", "Failure", "Total"))),
format = "pipe",
caption = "An example of a $2 \\times 2$ contingency table."
)
scores_by_year <- tibble(
Name = c("Alice", "Bob", "Charlie"),
`2020` = c(85, 90, 87),
`2021` = c(88, 91, 85)
)
library(tidyverse)
scores_by_year <- tibble(
Name = c("Alice", "Bob", "Charlie"),
`2020` = c(85, 90, 87),
`2021` = c(88, 91, 85)
)
scores_by_year
scores_by_year
scores_by_year %>%
pivot_longer(cols = `2020`:`2021`, names_to = "Year", values_to = "Score")
2/3*160
2/3*160/24
n <- 25
p <- 2
p <- 2
x <- rnorm(n)
data <- tibble(x, y)
alpha <- 0.05
lm_fit <- lm(y ~ x, data = data)
n <- 25
p <- 2
x <- rnorm(n)
y <- 1 + 2*x + rnorm(n)
data <- tibble(x, y)
library(tidyverse)
library(tidyverse)
n <- 25
p <- 2
x <- rnorm(n)
y <- 1 + 2*x + rnorm(n)
data <- tibble(x, y)
alpha <- 0.05
lm_fit <- lm(y ~ x, data = data)
predictions <- predict(lm_fit, se.fit = TRUE)
t_quantile <- qt(1 - alpha / 2, df = n - p)
f_quantile <- qf(1 - alpha, df1 = p, df2 = n - p)
data |>
mutate(
fit = predictions$fit,
se = predictions$se.fit,
ptwise_width = t_quantile * se,
simultaneous_width = sqrt(p * f_quantile) * se
) |>
ggplot(aes(x = x)) +
geom_point(aes(y = y)) +
geom_line(aes(y = fit), color = "blue") +
geom_line(aes(y = fit + ptwise_width, color = "Pointwise")) +
geom_line(aes(y = fit - ptwise_width, color = "Pointwise")) +
geom_line(aes(y = fit + simultaneous_width, color = "Simultaneous")) +
geom_line(aes(y = fit - simultaneous_width, color = "Simultaneous")) +
theme_bw() +
theme(legend.title = element_blank(), legend.position = "bottom")
set.seed(1)
n <- 25
p <- 2
x <- rnorm(n)
y <- 1 + 2*x + rnorm(n)
set.seed(1)
n <- 200
x <- rnorm(n)
y <- 1 + 2*x + rnorm(n)
data <- tibble(x, y)
lm_fit <- lm(y ~ x, data = data)
residuals <- residuals(lm_fit)
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram()
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram() +
theme_bw()
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 30) +
theme_bw()
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 30, color = "black") +
theme_bw()
residuals <- rstandard(lm_fit)
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 30, color = "black") +
theme_bw()
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 20, color = "black") +
theme_bw()
library(tidyverse)
set.seed(1)
n <- 500
x <- rnorm(n)
y <- 1 + 2*x + rnorm(n)
lm_fit <- lm(y ~ x, data = data)
residuals <- rstandard(lm_fit)
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 20, color = "black") +
theme_bw()
qqplot(residuals)
qqplot(x = residuals)
qqplot(y = residuals)
?qqplot
plot(lm_fit, which = 2)
tibble(residuals) |>
ggplot(aes(sample = residuals)) +
stat_qq() +
stat_qq_line() +
theme_bw()
n <- 500
x <- rnorm(n)
y <- 1 + 2*x + rnorm(n)
data <- tibble(x, y)
lm_fit <- lm(y ~ x, data = data)
residuals <- rstandard(lm_fit)
tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 20, color = "black") +
theme_bw()
tibble(residuals) |>
ggplot(aes(sample = residuals)) +
stat_qq() +
stat_qq_line() +
theme_bw()
library(cowplot)
plot_grid(p1, p2, ncol = 2)
p1 <- tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 20, color = "black") +
labs(x = "Residual",
y = "Frequency")
theme_bw()
theme_bw()
p2 <- tibble(residuals) |>
ggplot(aes(sample = residuals)) +
stat_qq() +
stat_qq_line() +
labs(x = "Expected quantile",
y = "Observed quantile") +
theme_bw()
p1 <- tibble(residuals) |>
ggplot(aes(x = residuals)) +
geom_histogram(bins = 20, color = "black") +
labs(x = "Residual",
y = "Frequency") +
theme_bw()
p2 <- tibble(residuals) |>
ggplot(aes(sample = residuals)) +
stat_qq() +
stat_qq_line() +
labs(x = "Expected quantile",
y = "Observed quantile") +
theme_bw()
plot_grid(p1, p2, ncol = 2)
p <- 2
n <- 100
sqrt(p*qf(p = 0.95, df1 = p, df2 = n - p))/qt(p = 0.975, df = n - p)
(sqrt(p*qf(p = 0.95, df1 = p, df2 = n - p))/qt(p = 0.975, df = n - p))^2
library(tidyverse)
library(tidyverse)
set.seed(1)
n <- 25
p <- 2
x <- rnorm(n)
y <- 1 + 2*x + rnorm(n)
data <- tibble(x, y)
alpha <- 0.05
lm_fit <- lm(y ~ x, data = data)
predictions <- predict(lm_fit, se.fit = TRUE)
t_quantile <- qt(1 - alpha / 2, df = n - p)
f_quantile <- qf(1 - alpha, df1 = p, df2 = n - p)
t_quantile
sqrt(p * f_quantile)
sqrt(p * f_quantile) / t_quantile
data |>
mutate(
fit = predictions$fit,
se = predictions$se.fit,
ptwise_width = t_quantile * se,
simultaneous_width = sqrt(p * f_quantile) * se
)
0.495/0.392
data |>
mutate(
fit = predictions$fit,
se = predictions$se.fit,
ptwise_width = t_quantile * se,
simultaneous_width = sqrt(p * f_quantile) * se
) |>
ggplot(aes(x = x)) +
geom_point(aes(y = y)) +
geom_line(aes(y = fit), color = "blue") +
geom_line(aes(y = fit + ptwise_width, color = "Pointwise")) +
geom_line(aes(y = fit - ptwise_width, color = "Pointwise")) +
geom_line(aes(y = fit + simultaneous_width, color = "Simultaneous")) +
geom_line(aes(y = fit - simultaneous_width, color = "Simultaneous")) +
theme_bw() +
theme(legend.title = element_blank(), legend.position = "bottom")
data |>
mutate(
fit = predictions$fit,
se = predictions$se.fit,
ptwise_width = t_quantile * se,
simultaneous_width = sqrt(p * f_quantile) * se
) |> arrange(x)
1.03 / 0.818
-3.27 - 0.818
-3.27 - 1.03
-3.27 + 0.818
-3.27 + 1.03
